// @before-stub-for-debug-begin
#include <vector>
#include <string>
#include <queue>
#include <unordered_set>
#include "commoncppproblem264.h"

using namespace std;
// @before-stub-for-debug-end

/*
 * @lc app=leetcode.cn id=264 lang=cpp
 *
 * [264] 丑数 II
 */

// @lc code=start
class Solution
{
public:
    int nthUglyNumber(int n)
    {
        vector<int> dp(n + 1);
        dp[1] = 1;
        int p2, p3, p5;
        p2 = p3 = p5 = 1;
        for (int i = 2; i <= n; i++)
        {
            int num2 = dp[p2] * 2, num3 = dp[p3] * 3, num5 = dp[p5] * 5;
            dp[i] = min(min(num2, num3), num5);
            if (dp[i] == num2)
            {
                p2++;
            }
            if (dp[i] == num3)
            {
                p3++;
            }
            if (dp[i] == num5)
            {
                p5++;
            }
        }
        return dp[n];
    }
};
// @lc code=end
